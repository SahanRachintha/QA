name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install backend dependencies (including dev)
        working-directory: QA/backend
        run: npm install --include=dev

      - name: Install frontend dependencies
        working-directory: QA
        run: npm install

  test:
    runs-on: ubuntu-latest
    needs: build
    env:
      MONGO_URI: ${{ secrets.MONGO_URI }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      NODE_ENV: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install backend dependencies (including dev)
        working-directory: QA/backend
        run: npm install --include=dev

      - name: Run Selenium tests
        working-directory: QA/backend
        run: |
          npm install selenium-webdriver chromedriver
          npm run test:selenium || echo "Selenium tests skipped/failure"

  analysis:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run ESLint on frontend
        working-directory: QA
        run: npx eslint . || true

      - name: Run ESLint on backend
        working-directory: QA/backend
        run: npx eslint . || true

  deploy:
    runs-on: ubuntu-latest
    needs: analysis
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy to production
        run: echo "ðŸš€ Deployment step placeholder"
        # Replace with your actual deploy command (Heroku, Vercel, SSH, etc.)
